version: '3'
services:
  postgres:
    #go to dockerhub to find image--you will find postgres official
    #with the latest tag
    image: 'postgres:latest'
  
  redis:
    #go to dockerhub again to find image
    image: 'redis:latest'

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules #don't try to overwrite it
      - ./server:/app 
      #anytime changed in server, 
      # will be shared with the app container
      #it will be reflected to  the docker's app folder
    environment: 
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

deploy:
  provider: elasticbeanstalk
  region: us-west-2
  app: multi-docker
  env: MultiDocker-env
  bucket_name: elasticbeanstalk-us-west-2-487018625579
  bucket_path: docker-multi
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: 
    secure: $AWS_SECRET_KEY